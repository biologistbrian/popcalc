<center>
<div class='booyah-box col-10'>

  <table id="bingo1" class="display nowrap" title="Project List" style="min-height: 50vh;">
    <thead>
      <tr>
        <th>ID</th>
        <th>PIDTC</th>
        <th>Job Name</th>
        <th>Crop</th>
        <th>Traits</th>
        <th>NEIS Value</th>
        <th>Selfing RP Threshold</th>
        <th>Selfing Generation</th>
        <th>Confidence Level</th>
        <th>F3 IE's at Handoff</th>
        <th>NS Site</th>
        <th>F1 Site</th>
        <th>B1 Site</th>
        <th>B2 Site</th>
        <th>B3 Site</th>
        <th>B4 Site</th>
        <th>F2 Site</th>
      </tr>
    </thead>
    <tbody>
      <% @projlines.each do |p| %>
        <tr>
          <td><%= p.id %></td>
          <td><%= p.pidtc %></td>
          <td><%= p.jobName %></td>
          <td><%= p.crop %></td>
          <td><%= p.traits %></td>
          <td><%= p.neisValue %></td>
          <td><%= p.targetRprecoveryThreshold %></td>
          <td><%= p.targetSelfingGen %></td>
          <td><%= p.certainty %></td>
          <td><%= p.targetF3Material %></td>
          <td><%= p.nsSite %></td>
          <td><%= p.f1Site %></td>
          <td><%= p.bc1Site %></td>
          <td><%= p.bc2Site %></td>
          <td><%= p.bc3Site %></td>
          <td><%= p.bc4Site %></td>
          <td><%= p.f2Site %></td>

        </tr>
      <% end %>
    </tbody>
  </table>
  <span class="pull-left">
    Showing 
    <span id="myLink">
    </span> of 
    <span id="totalRows"> Total
    </span>
  </span>
  <br />
  <br />
  <%= button_to "Run Calculator", runscript_path, class: 'btn btn-primary' %>
</div>

<br />
<br />




</center>
<script>
$(function(){
  setInterval(oneSecondFunction, 10);
});

function oneSecondFunction() {
// stuff to do every second
  var numOfVisibleRows = $('tr:has(td:visible)').length;
  document.getElementById("myLink").innerHTML=numOfVisibleRows;
};

$( document ).on('turbolinks:load', function() {
  jQuery(".best_in_place").best_in_place();
  var totalRows = $('tr').length - $('thead>tr').length;
  document.getElementById("totalRows").innerHTML=totalRows;
  $('#bingo1').excelTableFilter();
  $('#bingo1').DataTable( {
    colReorder: true,
    "bSort" : false,
    "paging": false,
    scrollY: '65vh',
    info: false,
    scrollCollapse: true,
    "dom": '<"toolbar">frtp',
    searching: false,
    select: true,
    scrollX: true,
    bJQueryUI: true,
    pagingType: "simple",
    bDestroy: true,
  });
    $("div.toolbar").html("<div class='pull-left'><h3 style='font-family: sans-serif;'>Staging Data</h3></div><div class='pull-right'><div class='dropdown'><button onclick='myFunction()' class='dropbtn btn btn-primary'><i style='color:#45c4af; font-size:15px;' class='fa fa-caret-down'></i> Options</button><div id='myDropdown' class='dropdown-content'><a href='#bingoModal' data-toggle='modal' data-target='#bingoModal' style='color:white'><i style='color:#45c4af; font-size:15px;' class='fa fa-upload'></i> Import New </a>");
    
function exportTableToCSV($table, filename) {
                var $headers = $table.find('tr:has(th)')
                    ,$rows = $table.find('tr:has(td:visible)')
                    // Temporary delimiter characters unlikely to be typed by keyboard
                    // This is to avoid accidentally splitting the actual contents
                    ,tmpColDelim = String.fromCharCode(11) // vertical tab character
                    ,tmpRowDelim = String.fromCharCode(0) // null character
                    // actual delimiter characters for CSV format
                    ,colDelim = '","'
                    ,rowDelim = '"\r\n"';
                    // Grab text from table into CSV formatted string
                    var csv = '"';
                    csv += formatRows($headers.map(grabRow));
                    csv += rowDelim;
                    csv += formatRows($rows.map(grabRow)) + '"';
                    // Data URI
                    var csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);
                $(this)
                    .attr({
                    'download': filename
                        ,'href': csvData
                        //,'target' : '_blank' //if you want it to open in a new window
                });
                //------------------------------------------------------------
                // Helper Functions 
                //------------------------------------------------------------
                // Format the output so it has the appropriate delimiters
                function formatRows(rows){
                    return rows.get().join(tmpRowDelim)
                        .split(tmpRowDelim).join(rowDelim)
                        .split(tmpColDelim).join(colDelim);
                };
                // Grab and format a row from the table
                function grabRow(i,row){
                     
                    var $row = $(row);
                    //for some reason $cols = $row.find('td') || $row.find('th') won't work...
                    var $cols = $row.find('td'); 
                    if(!$cols.length) $cols = $row.find('th .dataTables_sizing').clone().children().remove().end();  
                    return $cols.map(grabCol)
                                .get().join(tmpColDelim);
                };
                // Grab and format a column from the table 
                function grabCol(j,col){
                    var $col = $(col),
                        $text = $col.text();
                    return $text.replace('"', '""'); // escape double quotes
                };
            }
            // This must be a hyperlink
            $("#export").click(function (event) {
                // var outputFile = 'export'
                var outputFile = window.prompt("What do you want to name your output file?") || 'export';
                outputFile = outputFile.replace('.csv','') + '.csv'
                 
                // CSV
                exportTableToCSV.apply(this, [$('#bingo1'), outputFile]);
                
                // IF CSV, don't do event.preventDefault() or return false
                // We actually need this to be a typical hyperlink
            }); 



});
function myFunction() {
    document.getElementById("myDropdown").classList.toggle("show");
}

// Close the dropdown menu if the user clicks outside of it
window.onclick = function(event) {
  if (!event.target.matches('.dropbtn')) {

    var dropdowns = document.getElementsByClassName("dropdown-content");
    var i;
    for (i = 0; i < dropdowns.length; i++) {
      var openDropdown = dropdowns[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
      }
    }
  }
};
</script>
<!-- Modal -->
<div class="modal fade" id="bingoModal" tabindex="-1" role="dialog" aria-labelledby="bingoModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="bingoModalLabel">Import Project Data</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <%= link_to "Download Upload Template", download_template_path %>
        <br />
        <%= form_tag import_projlines_path, multipart: true do %>
          <%= file_field_tag :file %><br />
          <%= submit_tag "Upload!" %>
        <% end %>
      </div>      
    </div>
  </div>
</div>